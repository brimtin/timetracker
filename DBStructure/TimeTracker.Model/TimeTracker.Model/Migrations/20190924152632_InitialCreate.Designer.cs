// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeDB;

namespace Tracker.Model.Migrations
{
    [DbContext(typeof(TimeTracker))]
    [Migration("20190924152632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeDB.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<int>("CompanyPhone");

                    b.Property<string>("CompanyPoc");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TimeDB.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("LoginID");

                    b.Property<string>("Title");

                    b.HasKey("EmployeeID");

                    b.HasIndex("LoginID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TimeDB.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Password");

                    b.HasKey("LoginID");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("TimeDB.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID");

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("ProjectManagerID");

                    b.Property<string>("ProjectName");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("TotalTime");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TimeDB.ProjectManager", b =>
                {
                    b.Property<int>("ProjectManagerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectID");

                    b.Property<int?>("ProjectID1");

                    b.Property<string>("Rights");

                    b.HasKey("ProjectManagerID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectID1");

                    b.ToTable("ProjectManagers");
                });

            modelBuilder.Entity("TimeDB.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID");

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("ProjectID");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("SessionId");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("TimeDB.Employee", b =>
                {
                    b.HasOne("TimeDB.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TimeDB.ProjectManager", b =>
                {
                    b.HasOne("TimeDB.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TimeDB.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID1");
                });

            modelBuilder.Entity("TimeDB.Session", b =>
                {
                    b.HasOne("TimeDB.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TimeDB.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
